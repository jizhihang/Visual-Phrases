Subject - predicate - object (optional if action is performed on self)
can also be:

subject - predicate - conjunction (optional*) - object (optional*)

bird flying 1 - 5, then individual birds 1 - 5.

seems to be:

action pairing[1-n] - actor[1-n+k] - subject[1-m+j],
n = number of actions
m = number of objects, m <= n - 1
k = additional instances of actor type, k can be 0 or a positive integer
j = additional instances of object type, j can be 0 or a positive integer

can have more objects than action pairings but always in above format.
______________
%  strfind(cell) to find which cells contain a specific string.. returns
% integer for starting position in string of target. 
% isempty to check if empty? need to iterate through entire array to check.
% get length of cell to see if it is a part of phrase vs actual target?

______________
load in data.

in tags: 

read in first tag.

count instances of first tag. , get length of first tag. have length of total list. 

split string into subject - predicate - conj - object array.

** break here if single. 
get next phrase. incr by however many first phrases there are.
split the next item, if it is split into > 1 it must be a phrase.. repeat above. 

find instances of subject. (distinguish from combo by length)
find instances of object (if split from above >2)

	for tag in first_tag_type:
		get corresponding subject feature (by position) 
		get corresponding object feature (by position)
	 

consider possibility of multiple phrases in image?
		
get next phrase. incr by however many first phrases there are.
split the next item, if it is split into > 1 it must be a phrase.. repeat above. 

_______

Plan again..


Just match with pOut and get the corresponding output.
		